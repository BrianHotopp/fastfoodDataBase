add/modify menu entries
	- add comment
	- endorse for accurate information
	- un-endorse for inaccurate information


menuentries(food_id, restaurant_id, creator_id, name, description, price,
calories, creation_date, update_date) key: food_id
food_id -> restaurant_id
food_id -> creator_id
food_id -> name
food_id -> description
food_id -> price
food_id -> calories
food_id -> creation_date
food_id -> update_date

create table menuentries(food_id SERIAL, restaurant_id INTEGER, creator_id INTEGER, name VARCHAR(280), description VARCHAR(280), price DECIMAL, calories INTEGER, creation_date TIMESTAMPTZ, update_date TIMESTAMPTZ,  PRIMARY KEY(food_id), FOREIGN KEY(restaurant_id) REFERENCES restaurants(restaurant_id), FOREIGN KEY(creator_id) REFERENCES users(user_id), CHECK(restaurant_id IS NOT NULL AND creator_id IS NOT NULL AND name IS NOT NULL AND description IS NOT NULL AND price IS NOT NULL AND price >= 0
AND calories IS NOT NULL AND calories >= 0 AND creation_date IS NOT NULL AND update_date IS NOT NULL));

create table menuentries(food_id SERIAL, restaurant_id INTEGER, creator_id INTEGER, name VARCHAR(280), description VARCHAR(280), price DECIMAL, calories INTEGER, creation_date TIMESTAMPTZ, update_date TIMESTAMPTZ, PRIMARY KEY(food_id));

food_ratings(food_id, user_id, rating, comment, timestamp) key: food_id, user_id
food_id, user_id -> rating
food_id, user_id -> comment
food_id, user_id -> timestamp

create table food_ratings(food_id INTEGER, user_id INTEGER, rating INTEGER NOT NULL, comment VARCHAR(280), timestamp TIMESTAMPTZ NOT NULL, PRIMARY KEY(food_id, user_id), FOREIGN KEY(food_id) REFERENCES menuitems(food_id), FOREIGN KEY(user_id) REFERENCES users(user_id));

trust_ratings(food_id, user_id, trust) key: food_id, user_id
food_id, user_id -> trust

create table trust_ratings(food_id INTEGER, user_id INTEGER, trust INTEGER, PRIMARY KEY(food_id, user_id));

restaurants(restaurant_id, google_location) key: restaurant_id
restaurant_id -> google_location

create table restaurants(restaurant_id INTEGER, google_location VARCHAR(100), PRIMARY KEY(restaurant_id));

users(user_id, firstname, lastname, first_seen) key: user_id
user_id -> firstname
user_id -> lastname

create table users(user_id INTEGER, firstname VARCHAR(100), lastname VARCHAR(100), first_seen TIMESTAMPTZ, PRIMARY KEY(user_id));


